@page "/patients"
@using BlazorApp.Shared.Data.Models;
@using Newtonsoft.Json;
@using System.Text;
@inject HttpClient Http

<PageTitle>Patients</PageTitle>
<h1>SWA: Patients |  Database Operations</h1>
<blockquote>
    Open the browser developer tools to see the API responses.
</blockquote>


<MudDataGrid Items="@responseList" Filterable="false" SortMode="@SortMode.None" Groupable="false">
    <Columns>
        <PropertyColumn Property="x => x.FullName" />
        <PropertyColumn Property="x => x.EmailAddress" />
        <PropertyColumn Property="x => x.City" Title="City" />
        <TemplateColumn CellClass="d-flex justify-end">
            <CellTemplate>
                <MudStack Row>
                    <MudButton Size="@Size.Small" Variant="@Variant.Filled" Color="@Color.Primary">Edit</MudButton>
                </MudStack>
            </CellTemplate>
        </TemplateColumn>
    </Columns>
</MudDataGrid>


@code {

    public record PatientRecord(string Name, string Email, string City);
    IEnumerable<Patient> responseList;
    string responseCreate;
    
    protected override void OnInitialized()
    {
        List();
        

    }

    async Task List()
    {
        var endpoint = "/data-api/rest/Patient";
        var json = await Http.GetStringAsync(endpoint);
        responseList = JsonConvert.DeserializeObject<PatientResponse>(json).Value;

    }

    async Task Create()
    {
        var endpoint = "/data-api/rest/Patient";
        var response = new HttpResponseMessage();
        try
            {
            var data = new Patient
            {
                FirstName = "Olivia",
                LastName = "Bobb",
                PhoneNumber = "1234567890",
                EmailAddress = "test@email.com",
                DateOfBirth = new DateTime(1990, 1, 1),
                PersonalId = 1910109260017,
                Gender = "Female",
                SpokenLanguage = "English",
                StreetAddress = "123 Main St",
                City = "Targu-Mures",
                StateProvince = "Mures",
                PostalCode = "540000",
                DoctorId = 1
            };


        // Use Newtonsoft.Json to serialize the data object to a JSON string
            var jsonString = JsonConvert.SerializeObject(data, new JsonSerializerSettings
                {
                    NullValueHandling = NullValueHandling.Ignore
                });

        var httpContent = new StringContent(jsonString, Encoding.UTF8, "application/json");

        response = await Http.PostAsync(endpoint, httpContent);

        // Ensure we have a successful status code
        response.EnsureSuccessStatusCode();

        // Read the response content as a string
        var responseContent = await response.Content.ReadAsStringAsync();

        // Deserialize the response string to an object using Newtonsoft.Json
        var result = JsonConvert.DeserializeObject<Patient>(responseContent);

        
        responseCreate = "Created entry: " + result.EmailAddress;
        }
        catch (HttpRequestException ex)
        {
                var errorContent = await response.Content.ReadAsStringAsync();
                Console.WriteLine($"Error: {ex.Message}. Response content: {errorContent}");
                throw;
        }
    }
    
    

    
    
    
    
    // update patient

    public class PatientResponse
    {
        public List<Patient> Value { get; set; }
    }

    
}
