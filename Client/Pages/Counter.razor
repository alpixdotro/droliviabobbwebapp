@page "/counter"
@using Newtonsoft.Json;
@using System.Text;
@inject HttpClient Http

<PageTitle>Counter</PageTitle>

<h1>Static Web Apps Database Operations</h1>
<blockquote>
    Open the browser developer tools to see the API responses.
</blockquote>
<div>
    <button @onclick="List">List</button>
    <!-- Other buttons omitted for brevity -->
    @if (responseList != null)
    {
        <table>
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Name</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in responseList)
                {
                    <tr>
                        <td>@item.Id</td>
                        <td>@item.FirstName @item.LastName</td>
                        <td>@item.PersonalId</td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

<div>
    <button @onclick="Create">Create</button>
    @if (responseCreate != null)
    {
        <p>@responseCreate</p>
    }
</div>
@code {
    List<Patient> responseList;
    string responseCreate;

    async Task List()
    {
        var endpoint = "/data-api/rest/Patient";
        var json = await Http.GetStringAsync(endpoint);
        responseList = JsonConvert.DeserializeObject<PatientResponse>(json).Value;
    }

    async Task Create()
    {
        var endpoint = "/data-api/rest/Patient";
        var response = new HttpResponseMessage();
        try
            {
            var data = new PatientCreateDto
            {
                FirstName = "Olivia",
                LastName = "Bobb",
                PhoneNumber = "1234567890",
                EmailAddress = "test@email.com",
                DateOfBirth = new DateTime(1990, 1, 1),
                PersonalId = 1910109260017,
                Gender = "Female",
                SpokenLanguage = "English",
                StreetAddress = "123 Main St",
                City = "Targu-Mures",
                StateProvince = "Mures",
                PostalCode = "540000",
                DoctorId = 1
            };


        // Use Newtonsoft.Json to serialize the data object to a JSON string
        var jsonString = JsonConvert.SerializeObject(data);

        var httpContent = new StringContent(jsonString, Encoding.UTF8, "application/json");

        response = await Http.PostAsync(endpoint, httpContent);

        // Ensure we have a successful status code
        response.EnsureSuccessStatusCode();

        // Read the response content as a string
        var responseContent = await response.Content.ReadAsStringAsync();

        // Deserialize the response string to an object using Newtonsoft.Json
        var result = JsonConvert.DeserializeObject<Patient>(responseContent);

        
        responseCreate = "Created entry: " + result.Id;
            response.EnsureSuccessStatusCode();
        }
        catch (HttpRequestException ex)
        {
                var errorContent = await response.Content.ReadAsStringAsync();
                Console.WriteLine($"Error: {ex.Message}. Response content: {errorContent}");
                throw;
        }
    }
    
    

    
    
    
    
    // update patient

    

    public class Patient
    {
        public int Id { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string PhoneNumber { get; set; }
        public string EmailAddress { get; set; }
        public DateTime DateOfBirth { get; set; }
        public long PersonalId { get; set; }
        public string Gender { get; set; }
        public string SpokenLanguage { get; set; }
        public string StreetAddress { get; set; }
        public string City { get; set; }
        public string StateProvince { get; set; }
        public string PostalCode { get; set; }
        public int DoctorId { get; set; }
    }
    public class PatientCreateDto
    {
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string PhoneNumber { get; set; }
        public string EmailAddress { get; set; }
        public DateTime DateOfBirth { get; set; }
        public long PersonalId { get; set; }
        public string Gender { get; set; }
        public string SpokenLanguage { get; set; }
        public string StreetAddress { get; set; }
        public string City { get; set; }
        public string StateProvince { get; set; }
        public string PostalCode { get; set; }
        public int DoctorId { get; set; }
    }


    public class PatientResponse
    {
        public List<Patient> Value { get; set; }
    }

    
}
